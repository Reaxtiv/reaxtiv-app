{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gines\\\\reaxtiv-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport WelcomeScreen from \"./components/WelcomeScreen\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [wallet, setWallet] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [error, setError] = useState(null);\n  const handleConnect = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const account = accounts[0];\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        setWallet(account);\n        setProvider(provider);\n        setError(null);\n      } catch (err) {\n        setError(\"Connection rejected or error connecting.\");\n      }\n    } else {\n      setError(\"MetaMask is not installed.\");\n    }\n  };\n  if (!wallet) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(WelcomeScreen, {\n        onConnect: handleConnect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#ff6b6b\",\n          textAlign: \"center\",\n          marginTop: 12,\n          fontWeight: \"bold\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Aquí va el resto de tu app cuando la wallet está conectada\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      background: \"#100E0A\",\n      color: \"#FFC32B\",\n      fontFamily: \"'Montserrat', 'Arial', sans-serif\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wallet connected!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"monospace\",\n        fontSize: 20\n      },\n      children: wallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gnvEgCpApi2UH8cHxzVffdAABT8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WelcomeScreen","ethers","jsxDEV","_jsxDEV","App","_s","wallet","setWallet","provider","setProvider","error","setError","handleConnect","window","ethereum","accounts","request","method","account","BrowserProvider","err","children","onConnect","fileName","_jsxFileName","lineNumber","columnNumber","style","color","textAlign","marginTop","fontWeight","minHeight","background","fontFamily","display","flexDirection","alignItems","justifyContent","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/gines/reaxtiv-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport WelcomeScreen from \"./components/WelcomeScreen\";\r\nimport { ethers } from \"ethers\";\r\n\r\nfunction App() {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [provider, setProvider] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleConnect = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        const account = accounts[0];\r\n        const provider = new ethers.BrowserProvider(window.ethereum);\r\n        setWallet(account);\r\n        setProvider(provider);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError(\"Connection rejected or error connecting.\");\r\n      }\r\n    } else {\r\n      setError(\"MetaMask is not installed.\");\r\n    }\r\n  };\r\n\r\n  if (!wallet) {\r\n    return (\r\n      <div>\r\n        <WelcomeScreen onConnect={handleConnect} />\r\n        {error && (\r\n          <div style={{\r\n            color: \"#ff6b6b\",\r\n            textAlign: \"center\",\r\n            marginTop: 12,\r\n            fontWeight: \"bold\"\r\n          }}>{error}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Aquí va el resto de tu app cuando la wallet está conectada\r\n  return (\r\n    <div style={{\r\n      minHeight: \"100vh\",\r\n      background: \"#100E0A\",\r\n      color: \"#FFC32B\",\r\n      fontFamily: \"'Montserrat', 'Arial', sans-serif\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    }}>\r\n      <h2>Wallet connected!</h2>\r\n      <div style={{ fontFamily: \"monospace\", fontSize: 20 }}>{wallet}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QACjF,MAAMC,OAAO,GAAGH,QAAQ,CAAC,CAAC,CAAC;QAC3B,MAAMP,QAAQ,GAAG,IAAIP,MAAM,CAACkB,eAAe,CAACN,MAAM,CAACC,QAAQ,CAAC;QAC5DP,SAAS,CAACW,OAAO,CAAC;QAClBT,WAAW,CAACD,QAAQ,CAAC;QACrBG,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZT,QAAQ,CAAC,0CAA0C,CAAC;MACtD;IACF,CAAC,MAAM;MACLA,QAAQ,CAAC,4BAA4B,CAAC;IACxC;EACF,CAAC;EAED,IAAI,CAACL,MAAM,EAAE;IACX,oBACEH,OAAA;MAAAkB,QAAA,gBACElB,OAAA,CAACH,aAAa;QAACsB,SAAS,EAAEV;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC1ChB,KAAK,iBACJP,OAAA;QAAKwB,KAAK,EAAE;UACVC,KAAK,EAAE,SAAS;UAChBC,SAAS,EAAE,QAAQ;UACnBC,SAAS,EAAE,EAAE;UACbC,UAAU,EAAE;QACd,CAAE;QAAAV,QAAA,EAAEX;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAChB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;;EAEA;EACA,oBACEvB,OAAA;IAAKwB,KAAK,EAAE;MACVK,SAAS,EAAE,OAAO;MAClBC,UAAU,EAAE,SAAS;MACrBL,KAAK,EAAE,SAAS;MAChBM,UAAU,EAAE,mCAAmC;MAC/CC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IAClB,CAAE;IAAAjB,QAAA,gBACAlB,OAAA;MAAAkB,QAAA,EAAI;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BvB,OAAA;MAAKwB,KAAK,EAAE;QAAEO,UAAU,EAAE,WAAW;QAAEK,QAAQ,EAAE;MAAG,CAAE;MAAAlB,QAAA,EAAEf;IAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV;AAACrB,EAAA,CAtDQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}